#include <stdio.h>
#include <stdlib.h>

#define MAX 100

float x[MAX];

float* tridiagonal(float r, float d[], int n) 
{
    int i;
    float a = -r / 2, b = (1 + r), c = -r / 2;
    float alpha[MAX], beta[MAX];

    alpha[1] = b;
    beta[1] = d[1] / b;

    for (i = 2; i < n; i++) 
    {
        alpha[i] = b - (a * c / alpha[i - 1]);
        beta[i] = (d[i] - a * beta[i - 1]) / alpha[i];
    }

    x[n] = beta[n];
    for (i = n - 1; i >= 1; i--) 
    {
        x[i] = beta[i] - (c * x[i + 1]) / alpha[i];
    }

    return x;
}

float f(float x) 
{
    return 10*x*(5-x);
}

int main() 
{
    int i, j, n, m;
    float u[MAX][MAX], h = 1, k = 0.1, c = 1, r;
    r = 0.1;
    m = 5;
    n = 5;

    for (j = 0; j <= m; j++) 
    {
        u[0][j] = 0;
        u[n][j] = 0;
    }

    for (i = 1; i < n; i++) 
    {
        u[i][0] = f(i * h);
    }

    float d[MAX] = {0};

    for (j = 0; j < m; j++) 
    {
        for (i = 1; i < n; i++) 
        {
            d[i] = (r / 2) * u[i + 1][j] + (1 - r) * u[i][j] + (r / 2) * u[i - 1][j];
        }
        float *y = tridiagonal(r, d, n);
        for (i = 1; i < n; i++) 
        {
            u[i][j + 1] = y[i];
        }
    }

    printf("The value of all u(i,j): \n");
    for (j = m; j>=0; j--) 
    {
        for (i = 0; i <= n; i++) 
        {
            printf("\t%.2f", u[i][m-j]);
        }
        printf("\n");
    }

    return 0;
}
